// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux16.hdl

/**
 * 16-bit multiplexor: 
 * for i = 0..15 out[i] = a[i] if sel == 0 
 *                        b[i] if sel == 1
 */

CHIP Mux16 {
    IN a[16], b[16], sel;
    OUT out[16];

    PARTS:
    /*
    // 64 NANDs
    Mux(a=a[0], b=b[0], sel=sel, out=out[0]);
    Mux(a=a[1], b=b[1], sel=sel, out=out[1]);
    Mux(a=a[2], b=b[2], sel=sel, out=out[2]);
    Mux(a=a[3], b=b[3], sel=sel, out=out[3]);
    Mux(a=a[4], b=b[4], sel=sel, out=out[4]);
    Mux(a=a[5], b=b[5], sel=sel, out=out[5]);
    Mux(a=a[6], b=b[6], sel=sel, out=out[6]);
    Mux(a=a[7], b=b[7], sel=sel, out=out[7]);
    Mux(a=a[8], b=b[8], sel=sel, out=out[8]);
    Mux(a=a[9], b=b[9], sel=sel, out=out[9]);
    Mux(a=a[10], b=b[10], sel=sel, out=out[10]);
    Mux(a=a[11], b=b[11], sel=sel, out=out[11]);
    Mux(a=a[12], b=b[12], sel=sel, out=out[12]);
    Mux(a=a[13], b=b[13], sel=sel, out=out[13]);
    Mux(a=a[14], b=b[14], sel=sel, out=out[14]);
    Mux(a=a[15], b=b[15], sel=sel, out=out[15]);
    */

    /*
    // Can reduce to 49 NANDs, since the first op of each of the above Mux gates is Not(sel). Just do once.
    Not(in=sel, out=notsel);

    // Could turn these three gates into their own chip and use 16 times. Just using Nands here.
    // MuxHelp(a, b, sel, notsel, out)
    Nand(a=a[0], b=notsel, out=aNANDnotsel0);
    Nand(a=b[0], b=sel, out=bNANDsel0);
    Nand(a=aNANDnotsel0, b=bNANDsel0, out=out[0]);

    Nand(a=a[1], b=notsel, out=aNANDnotsel1);
    Nand(a=b[1], b=sel, out=bNANDsel1);
    Nand(a=aNANDnotsel1, b=bNANDsel1, out=out[1]);

    Nand(a=a[2], b=notsel, out=aNANDnotsel2);
    Nand(a=b[2], b=sel, out=bNANDsel2);
    Nand(a=aNANDnotsel2, b=bNANDsel2, out=out[2]);

    Nand(a=a[3], b=notsel, out=aNANDnotsel3);
    Nand(a=b[3], b=sel, out=bNANDsel3);
    Nand(a=aNANDnotsel3, b=bNANDsel3, out=out[3]);

    Nand(a=a[4], b=notsel, out=aNANDnotsel4);
    Nand(a=b[4], b=sel, out=bNANDsel4);
    Nand(a=aNANDnotsel4, b=bNANDsel4, out=out[4]);

    Nand(a=a[5], b=notsel, out=aNANDnotsel5);
    Nand(a=b[5], b=sel, out=bNANDsel5);
    Nand(a=aNANDnotsel5, b=bNANDsel5, out=out[5]);

    Nand(a=a[6], b=notsel, out=aNANDnotsel6);
    Nand(a=b[6], b=sel, out=bNANDsel6);
    Nand(a=aNANDnotsel6, b=bNANDsel6, out=out[6]);

    Nand(a=a[7], b=notsel, out=aNANDnotsel7);
    Nand(a=b[7], b=sel, out=bNANDsel7);
    Nand(a=aNANDnotsel7, b=bNANDsel7, out=out[7]);

    Nand(a=a[8], b=notsel, out=aNANDnotsel8);
    Nand(a=b[8], b=sel, out=bNANDsel8);
    Nand(a=aNANDnotsel8, b=bNANDsel8, out=out[8]);

    Nand(a=a[9], b=notsel, out=aNANDnotsel9);
    Nand(a=b[9], b=sel, out=bNANDsel9);
    Nand(a=aNANDnotsel9, b=bNANDsel9, out=out[9]);

    Nand(a=a[10], b=notsel, out=aNANDnotsel10);
    Nand(a=b[10], b=sel, out=bNANDsel10);
    Nand(a=aNANDnotsel10, b=bNANDsel10, out=out[10]);

    Nand(a=a[11], b=notsel, out=aNANDnotsel11);
    Nand(a=b[11], b=sel, out=bNANDsel11);
    Nand(a=aNANDnotsel11, b=bNANDsel11, out=out[11]);

    Nand(a=a[12], b=notsel, out=aNANDnotsel12);
    Nand(a=b[12], b=sel, out=bNANDsel12);
    Nand(a=aNANDnotsel12, b=bNANDsel12, out=out[12]);

    Nand(a=a[13], b=notsel, out=aNANDnotsel13);
    Nand(a=b[13], b=sel, out=bNANDsel13);
    Nand(a=aNANDnotsel13, b=bNANDsel13, out=out[13]);

    Nand(a=a[14], b=notsel, out=aNANDnotsel14);
    Nand(a=b[14], b=sel, out=bNANDsel14);
    Nand(a=aNANDnotsel14, b=bNANDsel14, out=out[14]);

    Nand(a=a[15], b=notsel, out=aNANDnotsel15);
    Nand(a=b[15], b=sel, out=bNANDsel15);
    Nand(a=aNANDnotsel15, b=bNANDsel15, out=out[15]);
    */

    /*
    // Same as above, but using MuxHelp chip
    Not(in=sel, out=notsel);
    MuxHelp(a=a[0], b=b[0], sel=sel, notsel=notsel, out=out[0]);
    MuxHelp(a=a[1], b=b[1], sel=sel, notsel=notsel, out=out[1]);
    MuxHelp(a=a[2], b=b[2], sel=sel, notsel=notsel, out=out[2]);
    MuxHelp(a=a[3], b=b[3], sel=sel, notsel=notsel, out=out[3]);
    MuxHelp(a=a[4], b=b[4], sel=sel, notsel=notsel, out=out[4]);
    MuxHelp(a=a[5], b=b[5], sel=sel, notsel=notsel, out=out[5]);
    MuxHelp(a=a[6], b=b[6], sel=sel, notsel=notsel, out=out[6]);
    MuxHelp(a=a[7], b=b[7], sel=sel, notsel=notsel, out=out[7]);
    MuxHelp(a=a[8], b=b[8], sel=sel, notsel=notsel, out=out[8]);
    MuxHelp(a=a[9], b=b[9], sel=sel, notsel=notsel, out=out[9]);
    MuxHelp(a=a[10], b=b[10], sel=sel, notsel=notsel, out=out[10]);
    MuxHelp(a=a[11], b=b[11], sel=sel, notsel=notsel, out=out[11]);
    MuxHelp(a=a[12], b=b[12], sel=sel, notsel=notsel, out=out[12]);
    MuxHelp(a=a[13], b=b[13], sel=sel, notsel=notsel, out=out[13]);
    MuxHelp(a=a[14], b=b[14], sel=sel, notsel=notsel, out=out[14]);
    MuxHelp(a=a[15], b=b[15], sel=sel, notsel=notsel, out=out[15]);
    */

    // Same as above, but using Mux16Help chip
    Not(in=sel, out=notsel);
    Mux16Help(a=a, b=b, sel=sel, notsel=notsel, out=out);
}
