/**
 * The representation of the Asteroids game.
 */
class AsteroidsGame {
    field Ship ship;        // The player's ship
    field boolean exit;     // Exit flag

    constructor AsteroidsGame new() {
        do ScreenExt.clearScreenToBlack();
        let ship = Ship.new(256, 128, 90);
        do ship.show();

        // Initialize the object's fields
        let exit = false;

        return this;
    }

    method void dispose() {
        do ship.dispose();
        return;
    }

    /** Starts the game, and handles inputs from the user that control
     *  the ship's movement direction. */
    method void run() {
        var char key;

        while (~exit) {
            // waits for a key to be pressed.
            while ((key = 0) & (~exit)) {
                let key = Keyboard.keyPressed();
                if (key = 130) { do ship.rotate(1);    } else {     // left
                if (key = 131) { do ship.thrust(true); } else {     // up
                if (key = 132) { do ship.rotate(-1);   } else {     // right
                if (key = 140) { let exit = true; }                 // esc
                } } }
                do ship.move();
                // do moveBall();
                do Sys.wait(10);
            }

            // Waits for the key to be released.
            while ((~(key = 0)) & (~exit)) {
                let key = Keyboard.keyPressed();
                do ship.move();
                // do moveBall();
                do Sys.wait(10);
            }

            // Stop rotation and thrust
            if (~exit) {
                do ship.rotate(0);
                do ship.thrust(false);
            }
        }

        if (exit) {
            do Output.moveCursor( 9,26);
            do Output.printString("           ");
            do Output.moveCursor(10,26);
            do Output.printString(" Game Over ");
            do Output.moveCursor(11,26);
            do Output.printString("           ");
        }

        return;
    }
}
